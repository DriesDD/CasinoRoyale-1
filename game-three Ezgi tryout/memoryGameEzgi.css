.memory-game-Ezgi {
  width: 640px;
  height: 640px;
  display: flex;
  flex-wrap: wrap;
  margin: auto;
}

.card {
  width: calc(25% - 5px - 5px); /* 1/4 of the screen - the margin */
  height: calc(33.333% - 5px -5px);
  position: relative; /*position relative to where you are on the screen, not the total screen */
  margin: 5px;
  background-color: #ffffff;
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
  border-radius: 5px;
}

.img-front,
.img-back {
  width: 100%;
  height: 100%;
  padding: 20px;
  position: absolute;
  border-radius: 5px;
  backface-visibility: hidden; /*works together with the rotateY: don't show the back*/
}

.img-front {
  transform: rotateY(180deg); /* rotate front picture */
}

.card.open {
  /*changed bg and added animation when card is open*/
  background-color: #06b4fe;
  cursor: default;
  animation-duration: 0.75s;
  animation-name: flip;
}
.card .img-front.open {
  /*rotated back to the front*/
  transform: rotateY(0deg);
}
.card .img-back.open {
  /*rotated to the back*/
  transform: rotateY(180deg);
}

.card.disabled {
  /* when a card is shown it canâ€™t be clicked on again till it is closed*/
  pointer-events: none;
}

.card.match {
  background-color: #76ce44;
  cursor: default;
  animation-duration: 0.75s;
  animation-name: match;
}

.card.unmatch {
  background-color: red;
  animation-duration: 0.75s;
  animation-name: unmatch;
}

/*copied from  https://github.com/sandraisrael/Memory-Game-fend/blob/master/css/app.css */
/*try to understand this animation later*/
@keyframes flip {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
}
@keyframes match {
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(0.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, 0.95, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes unmatch {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.2, 1.2, 1.2);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}
